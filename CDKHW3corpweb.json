{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "CloudFormation stack for network and server deployment",
  "Parameters": {
    "InstanceTypeParameter": {
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": ["t2.micro", "t2.small"],
      "Description": "Enter the instance type (t2.micro or t2.small) for EC2 instances."
    },
    "KeyPair": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "Iac : one",
      "Description": "server key-pair  for the EC2 instances."
    },
    "YourIp": {
      "Type": "String",
      "Description": "public IP address in CIDR notation."
    }
  },
  "Resources": {
    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [
          { 
            "Key": "Name",
            "Value": "EngineeringVpc" 
          }
        ]
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": "us-east-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          { "Key": "Name", "Value": "PublicSubnet1" }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "us-east-1b",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          { "Key": "Name", "Value": "PublicSubnet2" }
        ]
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "us-east-1a",
        "Tags": [
          { "Key": "Name", "Value": "PrivateSubnet1" }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "Vpc" },
        "CidrBlock": "10.0.3.0/24",
        "AvailabilityZone": "us-east-1b",
        "Tags": [
          { "Key": "Name", "Value": "PrivateSubnet2" }
        ]
      }
    },
    "RDSSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for RDS instance",
        "SubnetIds": [
          { "Ref": "PrivateSubnet1" },
          { "Ref": "PrivateSubnet2" }
        ]
      }
    },
    "RDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": "db.t2.micro",
        "Engine": "mysql",
        "DBSubnetGroupName": { "Ref": "RDSSubnetGroup" },
        "AllocatedStorage": "20",
        "MasterUsername": "admin",
        "MasterUserPassword": "admin123",
        "DBName": "mydb"
      }
    },
    "WebServerInstance1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceTypeParameter" },
        "ImageId": "ami-0c7f9161f8491665f",
        "KeyName": { "Ref": "KeyPair" },
        "SubnetId": { "Ref": "PublicSubnet1" },
        "SecurityGroupIds": [{ "Ref": "WebServerSecurityGroup" }]
      }
    },
    "WebServerInstance2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceTypeParameter" },
        "ImageId": "ami-0c7f9161f8491665f",
        "KeyName": { "Ref": "KeyPair" },
        "SubnetId": { "Ref": "PublicSubnet2" },
        "SecurityGroupIds": [{ "Ref": "WebServerSecurityGroup" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum update -y\n",
                "yum install -y git httpd php\n",
                "service httpd start\n",
                "chkconfig httpd on\n",
                "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
              ]
            ]
          }
        },
        "Tags": [
          { "Key": "Name", "Value": "web2" }
        ]
      }
    },
    "WebServerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow inbound traffic on port 80 for web servers",
        "VpcId": { "Ref": "Vpc" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "RDSSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow inbound traffic from web servers on port 3306 for RDS",
        "VpcId": { "Ref": "Vpc" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 3306,
            "ToPort": 3306,
            "SourceSecurityGroupId": { "Ref": "WebServerSecurityGroup" }
          }
        ]
      }
    }
  }
}
